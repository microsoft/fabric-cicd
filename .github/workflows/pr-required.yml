name: PR Aggregator
description: "Aggregate checks for pull requests to ensure required workflows are completed"

on:
    pull_request:
        branches: ["main"]
        types: [opened, edited, synchronize, ready_for_review]

jobs:
    check-statuses:
        runs-on: ubuntu-latest
        permissions:
            actions: read
        steps:
            - name: Install GitHub CLI
              uses: cli/cli-action@v2

            - name: Read required workflows from config
              id: read_config
              run: |
                  workflows=$(grep -v '^\s*$' .github/WORKFLOWS/required_pr_workflows.txt | sed 's/^[[:space:]]*//' | sed 's/[[:space:]]*$//')
                  workflows_json=$(printf '%s\n' "$workflows" | jq -R -s -c 'split("\n") | map(select(. != ""))')
                  echo "workflows=$workflows_json" >> "$GITHUB_OUTPUT"

            - name: Wait for required workflows
              env:
                  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              run: |
                  set -e
                  REQUIRED_WORKFLOWS=${{ steps.read_config.outputs.workflows }}
                  COMMIT_SHA="${{ github.event.pull_request.head.sha }}"
                  REPO="${{ github.repository }}"
                  MAX_RETRIES=10
                  RETRY_DELAY=10

                  echo "üßæ Required workflows: $REQUIRED_WORKFLOWS"
                  echo "$REQUIRED_WORKFLOWS" | jq -c '.[]' | while read -r wf; do
                    WF_NAME=$(echo "$wf" | sed 's/^"//' | sed 's/"$//')
                    echo "üîç Checking workflow: $WF_NAME"

                    attempt=1
                    status=""

                    while [[ $attempt -le $MAX_RETRIES ]]; do
                      echo "Attempt $attempt for $WF_NAME..."

                      status=$(gh run list \
                        --repo "$REPO" \
                        --workflow "$WF_NAME" \
                        --json headSha,conclusion \
                        --jq ".[] | select(.headSha==\"$COMMIT_SHA\") | .conclusion" | head -n 1)

                      if [[ "$status" == "success" ]]; then
                        echo "‚úÖ $WF_NAME succeeded"
                        break
                      elif [[ "$status" == "failure" || "$status" == "cancelled" || "$status" == "timed_out" ]]; then
                        echo "‚ùå $WF_NAME failed with status: $status"
                        exit 1
                      else
                        echo "üïê $WF_NAME not complete (status: $status), retrying in $RETRY_DELAY sec..."
                        sleep $RETRY_DELAY
                      fi

                      attempt=$((attempt + 1))
                    done

                    if [[ "$status" != "success" ]]; then
                      echo "‚ùå $WF_NAME did not succeed after $MAX_RETRIES attempts."
                      exit 1
                    fi
                  done

                  echo "üéâ All required workflows passed!"
